AWSTemplateFormatVersion : 2010-09-09
Description : Networking template in YAML
Parameters:
    ProjectName:
        Type: String
        Description: The name of the project
        Default: ExampleNetworkingTemplate
    Environment:
        Type: String
        Description: The environment which this template has been deployed in
        Default: Example
Resources:
    VPC:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: 10.0.0.0/16
            InstanceTenancy: default
            EnableDnsSupport: true
            EnableDnsHostnames: true
            Tags:
                - Key: Name
                  Value: !Ref ProjectName
                - Key: Environment
                  Value: !Ref Environment
        DependsOn: 
            - InternetGateway
    
    # The InternetGateway is nessesary for access to/from the internet.
    # It behaves like a NAT
    InternetGateway:
        Type: AWS::EC2::InternetGateway
    AttachGateway:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            InternetGatewayId: !Ref InternetGateway
            VpcId: !Ref VPC
            
    DHCPOptions:
        Type: AWS::EC2::DHCPOptions
        Properties:
            DomainName: ap-southeast-2.compute.internal
            DomainNameServers: 
                - AmazonProvidedDNS
    DHCPOptionsVpcAssociation:
        Type: AWS::EC2::VPCDHCPOptionsAssociation
        Properties:
            DhcpOptionsId: !Ref DHCPOptions
            VpcId: !Ref VPC
    
    # Acl's are a stateless form of firewalling.
    # Acl's act like a white list
    AclGroup:
        Type: AWS::EC2::NetworkAcl
        Properties:
            VpcId: !Ref VPC
    AclEntryIngress:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
            NetworkAclId: !Ref AclGroup
            RuleNumber: 100
            Protocol: -1
            RuleAction: allow
            Egress: false
            CidrBlock: 0.0.0.0/0
            PortRange:
                From: 0
                To: 65535
    AclEntryEgress:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
            NetworkAclId: !Ref AclGroup
            RuleNumber: 100
            Protocol: -1
            RuleAction: allow
            Egress: true
            CidrBlock: 0.0.0.0/0
            PortRange:
                From: 0
                To: 65535
    
    # For internet access, outbound traffic needs to be directed to the InternetGateway
    PublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC
    InternetEgressRouting:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PublicRouteTable
            GatewayId: !Ref InternetGateway
            DestinationCidrBlock: 0.0.0.0/0
        DependsOn: AttachGateway
            
    PublicSubnetAZ1:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone: ap-southeast-2a
            CidrBlock: 10.0.0.0/24
            VpcId: !Ref VPC
    PublicSubnetAZ2:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone: ap-southeast-2b
            CidrBlock: 10.0.1.0/24
            VpcId: !Ref VPC
    PublicSubnetAZ3:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone: ap-southeast-2c
            CidrBlock: 10.0.2.0/24
            VpcId: !Ref VPC
            
    PublicSubnetAZ1ToPublicRouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnetAZ1
    PublicSubnetAZ2ToPublicRouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnetAZ2
    PublicSubnetAZ3ToPublicRouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnetAZ3
    
    EIPNATAZ1:
        Type: AWS::EC2::EIP
        Properties:
            Domain: vpc
        DependsOn: AttachGateway
    NATAZ1:
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt [EIPNATAZ1, AllocationId]
            SubnetId: !Ref PrivateSubnetAZ1
        DependsOn: AttachGateway
    PrivateSubnetAZ1:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone: ap-southeast-2a
            CidrBlock: 10.0.3.0/24
            VpcId: !Ref VPC
    PrivateSubnetAZ1ToPrivateRouteTableAZ1Association:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateSubnetAZ1RouteTable
            SubnetId: !Ref PrivateSubnetAZ1
    PrivateSubnetAZ1RouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC
    RouteToInternetFromPrivateSubnetAZ1:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateSubnetAZ1RouteTable
            NatGatewayId: !Ref NATAZ1
            DestinationCidrBlock: 0.0.0.0/0
    
    EIPNATAZ2:
        Type: AWS::EC2::EIP
        Properties:
            Domain: vpc
        DependsOn: AttachGateway
    NATAZ2:
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt [EIPNATAZ2, AllocationId]
            SubnetId: !Ref PrivateSubnetAZ2
        DependsOn: AttachGateway
    PrivateSubnetAZ2:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone: ap-southeast-2b
            CidrBlock: 10.0.4.0/24
            VpcId: !Ref VPC
    PrivateSubnetAZ2ToPrivateRouteTableAZ2Association:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateSubnetAZ2RouteTable
            SubnetId: !Ref PrivateSubnetAZ2
    PrivateSubnetAZ2RouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC
    RouteToInternetFromPrivateSubnetAZ2:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateSubnetAZ2RouteTable
            NatGatewayId: !Ref NATAZ2
            DestinationCidrBlock: 0.0.0.0/0
    
    EIPNATAZ3:
        Type: AWS::EC2::EIP
        Properties:
            Domain: vpc
        DependsOn: AttachGateway
    NATAZ3:
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt [EIPNATAZ3, AllocationId]
            SubnetId: !Ref PrivateSubnetAZ3
        DependsOn: AttachGateway
    PrivateSubnetAZ3:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone: ap-southeast-2c
            CidrBlock: 10.0.5.0/24
            VpcId: !Ref VPC
    PrivateSubnetAZ3ToPrivateRouteTableAZ3Association:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateSubnetAZ3RouteTable
            SubnetId: !Ref PrivateSubnetAZ3
    PrivateSubnetAZ3RouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC
    RouteToInternetFromPrivateSubnetAZ3:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateSubnetAZ3RouteTable
            NatGatewayId: !Ref NATAZ3
            DestinationCidrBlock: 0.0.0.0/0
    
Outputs:
    VPC:
        Value: !Ref VPC
        Export:
            Name: !Join ['-', [!Ref ProjectName, 'VPC']]
    InternetGateway:
        Value: !Ref InternetGateway
        Export:
            Name: !Join ['-', [!Ref ProjectName, 'InternetGateway']]
    InternetGatewayAttachment:
        Value: !Ref AttachGateway
        Export:
            Name: !Join ['-', [!Ref ProjectName, 'AttachGateway']]
    AclGroup:
        Value: !Ref AclGroup
        Export:
            Name: !Join ['-', [!Ref ProjectName, 'AclGroup']]
    PublicRouteTable:
        Value: !Ref PublicRouteTable
        Export:
            Name: !Join ['-', [!Ref ProjectName, 'PublicRouteTable']]
    
    EIPNATAZ1:
        Value: !Ref EIPNATAZ1
        Export:
            Name: !Join ['-', [!Ref ProjectName, 'EIPNATAZ1']]
    PrivateSubnetAZ1:
        Value: !Ref PrivateSubnetAZ1
        Export:
            Name: !Join ['-', [!Ref ProjectName, 'PrivateSubnetAZ1']]
    PrivateSubnetAZ1RouteTable:
        Value: !Ref PrivateSubnetAZ1RouteTable
        Export:
            Name: !Join ['-', [!Ref ProjectName, 'PrivateSubnetAZ1RouteTable']]
            
    EIPNATAZ2:
        Value: !Ref EIPNATAZ2
        Export:
            Name: !Join ['-', [!Ref ProjectName, 'EIPNATAZ2']]
    PrivateSubnetAZ2:
        Value: !Ref PrivateSubnetAZ2
        Export:
            Name: !Join ['-', [!Ref ProjectName, 'PrivateSubnetAZ2']]
    PrivateSubnetAZ2RouteTable:
        Value: !Ref PrivateSubnetAZ2RouteTable
        Export:
            Name: !Join ['-', [!Ref ProjectName, 'PrivateSubnetAZ2RouteTable']]
    
    EIPNATAZ3:
        Value: !Ref EIPNATAZ3
        Export:
            Name: !Join ['-', [!Ref ProjectName, 'EIPNATAZ3']]
    PrivateSubnetAZ3:
        Value: !Ref PrivateSubnetAZ3
        Export:
            Name: !Join ['-', [!Ref ProjectName, 'PrivateSubnetAZ3']]
    PrivateSubnetAZ3RouteTable:
        Value: !Ref PrivateSubnetAZ3RouteTable
        Export:
            Name: !Join ['-', [!Ref ProjectName, 'PrivateSubnetAZ3RouteTable']]
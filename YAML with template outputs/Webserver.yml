AWSTemplateFormatVersion : 2010-09-09
Description : Webserver template in YAML
Parameters:
    ProjectName:
        Type: String
        Description: The name of the project
        Default: ExampleWebserverTemplate
    NetworkingProjectName:
        Type: String
        Description: The name of the networking project
        Default: ExampleNetworkingTemplate
    Environment:
        Type: String
        Description: The environment which this template has been deployed in
        Default: Example
    #VPC:
    #    Type: AWS::EC2::VPC::Id
    #    Description: The VPC in which this webstack will be hosted in
    #    Default: !ImportValue Fn::Join ['-', [!Ref ProjectName, VPC]]
    #Subnets:
    #    Type: List<AWS::EC2::Subnet::Id>
    #    Description: The subnets in which this webstack will be hosted in
    #    Default:
    #        - !ImportValue Fn::Join ['-', [!Ref ProjectName, PrivateSubnetAZ1]]
    #        - !ImportValue Fn::Join ['-', [!Ref ProjectName, PrivateSubnetAZ3]]
    #EIPs:
    #    Type: List<String>
    #    Description: List of NAT EIP's associated with the private subnets
    #    Default:
    #        - Example-EIPNATAZ1
    #        - Example-EIPNATAZ3
Resources:
    ELBSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties: 
            GroupDescription : Allow all ingress traffic from any source associated with this security group
            VpcId: !ImportValue 
                        "Fn::Sub": "${NetworkingProjectName}-VPC"
            SecurityGroupIngress: 
                - IpProtocol : tcp
                  FromPort   : 443
                  ToPort     : 443
                  CidrIp     : !ImportValue 
                                    "Fn::Sub": "${NetworkingProjectName}-EIPNATAZ1CIDR"
               #- IpProtocol : tcp
               #   FromPort   : 443
               #  ToPort     : 443
               #   CidrIp     : !Join ['/', [!ImportValue Fn::Join ['-', [!Ref ProjectName, EIPNATAZ3]], 32]]
                  
    LoadBalancer:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
            Name: PrivateLB1
            Scheme: internet-facing #internet-facing, internal are the valid values here
            SecurityGroups:
                - !Ref ELBSecurityGroup
            Subnets: 
                - !ImportValue
                    "Fn::Sub": "${NetworkingProjectName}-PrivateSubnetAZ1"
                - !ImportValue
                    "Fn::Sub": "${NetworkingProjectName}-PrivateSubnetAZ3"
            Tags:
                - Key: Name
                  Value: "LoadBalancer"
        DependsOn:
                - ELBSecurityGroup
                        #- { Networking: Fn::Ref NetworkingProjectName}
                #- !ImportValue "Fn::Join ['-', [!Ref ProjectName, PrivateSubnetAZ1]]"
                    
        #BaseWebserverSecurityGroupSelfReference : 
        #    Type : AWS::EC2::SecurityGroupIngress
        #    Properties : 
        #        GroupId : 
        #            Ref : BaseWebserverSecurityGroup
        #        
        #        IpProtocol : tcp
        #        FromPort   : 0
        #        ToPort     : 65535
        #        SourceSecurityGroupId : 
        #            Ref : BaseWebserverSecurityGroup
        #    DependsOn  : BaseWebserverSecurityGroup
        